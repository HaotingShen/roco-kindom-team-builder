"""Initial tables

Revision ID: e0c0c61246eb
Revises: 
Create Date: 2025-06-14 15:18:38.716529

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e0c0c61246eb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('personalities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('hp_mod_pct', sa.Float(), nullable=False),
    sa.Column('atk_mod_pct', sa.Float(), nullable=False),
    sa.Column('mag_atk_mod_pct', sa.Float(), nullable=False),
    sa.Column('def_mod_pct', sa.Float(), nullable=False),
    sa.Column('mag_def_mod_pct', sa.Float(), nullable=False),
    sa.Column('spd_mod_pct', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('traits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('magic_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('effect_code', sa.Enum('ENHANCE_SPELL', 'SUN_HEALING', 'FLARE_BURST', 'FLOW_SPELL', 'EVOLUTION_POWER', name='magic_effect_code'), nullable=False),
    sa.Column('applies_to_type_id', sa.Integer(), nullable=True),
    sa.Column('applies_to_leader_tag', sa.Boolean(), nullable=False),
    sa.Column('effect_parameters', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['applies_to_type_id'], ['types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('monsters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('main_type_id', sa.Integer(), nullable=False),
    sa.Column('sub_type_id', sa.Integer(), nullable=False),
    sa.Column('default_legacy_type_id', sa.Integer(), nullable=False),
    sa.Column('trait_id', sa.Integer(), nullable=False),
    sa.Column('leader_tag', sa.Boolean(), nullable=False),
    sa.Column('base_hp', sa.Integer(), nullable=False),
    sa.Column('base_atk', sa.Integer(), nullable=False),
    sa.Column('base_mag_atk', sa.Integer(), nullable=False),
    sa.Column('base_def', sa.Integer(), nullable=False),
    sa.Column('base_mag_def', sa.Integer(), nullable=False),
    sa.Column('base_spd', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['default_legacy_type_id'], ['types.id'], ),
    sa.ForeignKeyConstraint(['main_type_id'], ['types.id'], ),
    sa.ForeignKeyConstraint(['sub_type_id'], ['types.id'], ),
    sa.ForeignKeyConstraint(['trait_id'], ['traits.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('trait_id')
    )
    op.create_table('moves',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('move_type_id', sa.Integer(), nullable=False),
    sa.Column('move_category', sa.Enum('ATTACK', 'DEFENSE', 'STATUS', name='move_category'), nullable=False),
    sa.Column('power', sa.Integer(), nullable=False),
    sa.Column('energy_cost', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('has_counter', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['move_type_id'], ['types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('legacy_moves',
    sa.Column('monster_id', sa.Integer(), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('move_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['monster_id'], ['monsters.id'], ),
    sa.ForeignKeyConstraint(['move_id'], ['moves.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['types.id'], ),
    sa.PrimaryKeyConstraint('monster_id', 'type_id')
    )
    op.create_table('monster_moves',
    sa.Column('monster_id', sa.Integer(), nullable=False),
    sa.Column('move_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['monster_id'], ['monsters.id'], ),
    sa.ForeignKeyConstraint(['move_id'], ['moves.id'], ),
    sa.PrimaryKeyConstraint('monster_id', 'move_id')
    )
    op.create_table('user_monsters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('monster_id', sa.Integer(), nullable=False),
    sa.Column('personality_id', sa.Integer(), nullable=False),
    sa.Column('legacy_type_id', sa.Integer(), nullable=False),
    sa.Column('has_leader_tag', sa.Boolean(), nullable=False),
    sa.Column('move1_id', sa.Integer(), nullable=False),
    sa.Column('move2_id', sa.Integer(), nullable=False),
    sa.Column('move3_id', sa.Integer(), nullable=False),
    sa.Column('move4_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['legacy_type_id'], ['types.id'], ),
    sa.ForeignKeyConstraint(['monster_id'], ['monsters.id'], ),
    sa.ForeignKeyConstraint(['move1_id'], ['moves.id'], ),
    sa.ForeignKeyConstraint(['move2_id'], ['moves.id'], ),
    sa.ForeignKeyConstraint(['move3_id'], ['moves.id'], ),
    sa.ForeignKeyConstraint(['move4_id'], ['moves.id'], ),
    sa.ForeignKeyConstraint(['personality_id'], ['personalities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('talents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('monster_instance_id', sa.Integer(), nullable=False),
    sa.Column('hp_boost', sa.Integer(), nullable=False),
    sa.Column('atk_boost', sa.Integer(), nullable=False),
    sa.Column('mag_atk_boost', sa.Integer(), nullable=False),
    sa.Column('def_boost', sa.Integer(), nullable=False),
    sa.Column('mag_def_boost', sa.Integer(), nullable=False),
    sa.Column('spd_boost', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['monster_instance_id'], ['user_monsters.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('talents')
    op.drop_table('user_monsters')
    op.drop_table('monster_moves')
    op.drop_table('legacy_moves')
    op.drop_table('moves')
    op.drop_table('monsters')
    op.drop_table('magic_items')
    op.drop_table('types')
    op.drop_table('traits')
    op.drop_table('personalities')
    # ### end Alembic commands ###
