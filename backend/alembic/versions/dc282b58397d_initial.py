"""Initial

Revision ID: dc282b58397d
Revises: 
Create Date: 2025-07-31 23:29:58.169782

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'dc282b58397d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('magic_items', 'effect_code',
               existing_type=postgresql.ENUM('ENHANCE_SPELL', 'SUN_HEALING', 'FLARE_BURST', 'FLOW_SPELL', 'EVOLUTION_POWER', name='magic_effect_code'),
               type_=sa.Enum('ENHANCE_SPELL', 'SUN_HEALING', 'FLARE_BURST', 'FLOW_SPELL', 'EVOLUTION_POWER', name='magic_effect_code_enum'),
               existing_nullable=False)
    op.add_column('monsters', sa.Column('preferred_attack_style', sa.Enum('PHYSICAL', 'MAGIC', 'BOTH', name='preferred_attack_style_enum'), nullable=False))
    op.alter_column('moves', 'move_category',
               existing_type=postgresql.ENUM('PHY_ATTACK', 'MAG_ATTACK', 'DEFENSE', 'STATUS', name='move_category'),
               type_=sa.Enum('PHY_ATTACK', 'MAG_ATTACK', 'DEFENSE', 'STATUS', name='move_category_enum'),
               existing_nullable=False)
    op.create_foreign_key(None, 'teams', 'magic_items', ['magic_item_id'], ['id'])
    op.create_foreign_key(None, 'user_monsters', 'personalities', ['personality_id'], ['id'])
    op.create_foreign_key(None, 'user_monsters', 'moves', ['move2_id'], ['id'])
    op.create_foreign_key(None, 'user_monsters', 'moves', ['move4_id'], ['id'])
    op.create_foreign_key(None, 'user_monsters', 'moves', ['move3_id'], ['id'])
    op.create_foreign_key(None, 'user_monsters', 'types', ['legacy_type_id'], ['id'])
    op.create_foreign_key(None, 'user_monsters', 'moves', ['move1_id'], ['id'])
    op.create_foreign_key(None, 'user_monsters', 'monsters', ['monster_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_monsters', type_='foreignkey')
    op.drop_constraint(None, 'user_monsters', type_='foreignkey')
    op.drop_constraint(None, 'user_monsters', type_='foreignkey')
    op.drop_constraint(None, 'user_monsters', type_='foreignkey')
    op.drop_constraint(None, 'user_monsters', type_='foreignkey')
    op.drop_constraint(None, 'user_monsters', type_='foreignkey')
    op.drop_constraint(None, 'user_monsters', type_='foreignkey')
    op.drop_constraint(None, 'teams', type_='foreignkey')
    op.alter_column('moves', 'move_category',
               existing_type=sa.Enum('PHY_ATTACK', 'MAG_ATTACK', 'DEFENSE', 'STATUS', name='move_category_enum'),
               type_=postgresql.ENUM('PHY_ATTACK', 'MAG_ATTACK', 'DEFENSE', 'STATUS', name='move_category'),
               existing_nullable=False)
    op.drop_column('monsters', 'preferred_attack_style')
    op.alter_column('magic_items', 'effect_code',
               existing_type=sa.Enum('ENHANCE_SPELL', 'SUN_HEALING', 'FLARE_BURST', 'FLOW_SPELL', 'EVOLUTION_POWER', name='magic_effect_code_enum'),
               type_=postgresql.ENUM('ENHANCE_SPELL', 'SUN_HEALING', 'FLARE_BURST', 'FLOW_SPELL', 'EVOLUTION_POWER', name='magic_effect_code'),
               existing_nullable=False)
    # ### end Alembic commands ###
